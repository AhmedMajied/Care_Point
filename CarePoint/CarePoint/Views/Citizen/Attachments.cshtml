@using Extensions
@using CarePoint.Models
@model IDictionary<DAL.AttachmentType,List<AttachmentViewModel>>
@{
    ViewBag.Title = "Attachements";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="container-fluid">
    @if (Model.Count > 0)
    {
    <ul class="nav nav-tabs">
        @{ var firstElement = Model.First(); }
        <li class="active"><a onclick="readAttachmentsOfType.call(this,@firstElement.Key.ID)" id="itab-@firstElement.Key.Name.ToLower().Replace(' ','-')" href="#idiv-@firstElement.Key.Name.ToLower().Replace(' ','-')-tab" data-toggle="tab">@firstElement.Key.Name</a></li>
        @foreach (var element in Model.Skip(1))
        {
        <li><a onclick="readAttachmentsOfType.call(this,@element.Key.ID)" id="itab-@element.Key.Name.ToLower().Replace(' ','-')" href="#idiv-@element.Key.Name.ToLower().Replace(' ','-')-tab" data-toggle="tab">@element.Key.Name</a></li>
        }
    </ul>
    <div class="tab-content">
        <div id="idiv-@firstElement.Key.Name.ToLower().Replace(' ','-')-tab" class="tab-pane fade in active">
            @Html.Partial("_AttachmentTabPartial", firstElement.Value, new ViewDataDictionary{ { "includeIsRead", true } });
        </div>
        @foreach (var element in Model.Skip(1))
        {
            <div id="idiv-@element.Key.Name.ToLower().Replace(' ','-')-tab" class="tab-pane fade">
                @Html.Partial("_AttachmentTabPartial", element.Value, new ViewDataDictionary { { "includeIsRead", true } })
            </div>
        }
    </div>
    }
</div>
@section scripts{
    <script src="~/Scripts/attachments.js"></script>
}