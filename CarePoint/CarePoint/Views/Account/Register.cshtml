@model CarePoint.Models.RegisterViewModel
@{
    ViewBag.Title = "Sign Up";
    Layout = "";
}
<html>
<head>
    <link rel="icon" href="~/Images/logo-navbar.ico" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <link rel="stylesheet" type="text/css" href="~/Content/guest-sign up.css" />
    <title>@ViewBag.Title</title>
</head>
<body>

    <div class="container-fluid">
        <div class="row" style="background-color: #21c2eb; padding-bottom: 1em; margin-bottom: 3em;">
            <img id="iimg-logo" class="img-responsive" src="~/Images/logo-sign up.png">
            <center><h1 style="color: #ffffff; font-weight: bold;">Create Your Carepoint Account</h1></center>
        </div>
        @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" , enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken();
            @Html.ValidationSummary("", new { @class = "text-danger" })

            <div class="row">
                <div class="col-md-1"></div>
                <div class="col-md-4">
                    <div class="input-group">
                        <span class="input-group-addon"><i class="glyphicon glyphicon-user"></i></span>
                        @Html.TextBoxFor(model => model.Name, new { @Id = "itext-full-name", @Class = "form-control", @Placeholder = "Full Name" })
                    </div>
                    <div class="input-group">
                        <span class="input-group-addon"><i class="glyphicon glyphicon-user"></i></span>
                        @Html.TextBoxFor(model => model.Username, new { @Id = "itext-usrname", @Class = "form-control", @Placeholder = "Username" })
                    </div>
                    <div class="input-group">
                        <span class="input-group-addon"><i class="glyphicon glyphicon-envelope"></i></span>
                        @Html.TextBoxFor(model => model.Email, new { @Id = "itext-mail", @Class = "form-control", @Placeholder = "Email" })
                    </div>
                    <div class="input-group">
                        <span class="input-group-addon"><i class="glyphicon glyphicon-phone"></i></span>
                        @Html.TextBoxFor(model => model.Phone, new { @Id = "itext-phone", @Class = "form-control", @Placeholder = "Phone Number" })
                    </div>
                </div>
                <div class="col-md-2"></div>
                <div class="col-md-4">
                    <div class="input-group">
                        <span class="input-group-addon"><i class="glyphicon glyphicon-lock"></i></span>
                        @Html.TextBoxFor(model => model.Password, new { @Id = "itext-passwd", @Class = "form-control", @Placeholder = "Password" })
                    </div>
                    <div class="input-group">
                        <span class="input-group-addon"><i class="glyphicon glyphicon-lock"></i></span>
                        @Html.TextBoxFor(model => model.ConfirmPassword, new { @Id = "itext-passwd-confirm", @Class = "form-control", @Placeholder = "Confirm Password" })
                    </div>
                    <h4>Birthdate:</h4>
                    <div class='form-group'>
                        <div class="col-xs-4 selectContainer">
                            @{
                                var days = new List<SelectListItem>();
                                days.Add(new SelectListItem() { Text = "Day", Value = "", Disabled = true, Selected = true });
                                for(int i = 1; i <= 31; ++i)
                                {
                                    days.Add(new SelectListItem() { Value = i.ToString(), Text = i.ToString() });
                                }
                             }
                            @Html.DropDownListFor(model => model.Day, Model.Days,new { @Id = "iselect-day", @Class = "form-control" })
                        </div>
                        <div class="col-xs-4 selectContainer">
                            @{
                                var months = new List<SelectListItem>();
                                months.Add(new SelectListItem() { Text = "Month", Value = "", Disabled = true, Selected = true });
                                for (int i = 1; i <= 12; ++i)
                                {
                                    months.Add(new SelectListItem() { Value = i.ToString(), Text = i.ToString() });
                                }
                            }
                            @Html.DropDownListFor(model => model.Month, Model.Months, new { @Id = "iselect-month", @Class = "form-control" })
                        </div>
                        <div class="col-xs-4 selectContainer">
                            @{
                                var years = new List<SelectListItem>();
                                years.Add(new SelectListItem() { Text = "Year", Value = "", Disabled = true, Selected = true });
                                for (int i = 1900; i <= DateTime.Now.Year-5; ++i)
                                {
                                    years.Add(new SelectListItem() { Value = i.ToString(), Text = i.ToString() });
                                }
                            }
                            @Html.DropDownListFor(model => model.Year, Model.Years, new { @Id = "iselect-year", @Class = "form-control" })
                        </div>
                    </div>
                </div>
                <div class="col-md-2"></div>
            </div>
            <div class="row">
                <div class="col-md-1"></div>
                <div class="col-md-4">
                    <h4>Gender:</h4>
                    <span class="cspn-radio-btn">
                        @Html.RadioButtonFor(model => model.IsMale, new { @Id = "iradio-gender-male" })
                        @Html.LabelFor(model => model.IsMale)
                    </span>
                    <span class="cspn-radio-btn">
                        @Html.RadioButtonFor(model => model.IsFemale, new { @Id = "iradio-gender-female" })
                        @Html.LabelFor(model => model.IsFemale)
                    </span>
                    <!--<span class="cspn-radio-btn">
                        <input id="iradio-gender-other" type="radio" name="radio-gender">
                        <label>Other</label>
                    </span>-->
                    <div class="file-loading">
                        <b>@Html.LabelFor(model => model.NationalID)</b>
                        @Html.TextBoxFor(model => model.NationalID,new { @Type = "file" , @Id = "ifile-national-id" })
                    </div>
                </div>
                <div class="col-md-2"></div>
                <div class="col-md-4">
                    @Html.DropDownListFor(model => model.Speciality, Model.Specialities, new { @Id = "iselect-speciality" , @Class = "form-control" })
                    <div class="file-loading">
                        <b>@Html.LabelFor(model => model.License)</b>
                        @Html.TextBoxFor(model => model.License, new { @Type = "file", @Id = "ifile-license" })
                    </div>
                </div>
                <div class="col-md-1"></div>
            </div>
            <center><input id="ibtn-sign-up" type="submit" value="Create Account" class="btn-lg btn-primary" style="font-weight: bold;margin:20px"></center>
        }
    </div>

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @Scripts.Render("~/bundles/jqueryval")
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>

</body>
</html>
